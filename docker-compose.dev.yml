#version: "3.8"
#
#services:
#  app:
#    build: .
#    image: growme/app:dev
#    environment:
#      # Spring 프로필은 SPRING_PROFILES_ACTIVE 로 지정해야 인식돼요
#      SPRING_PROFILES_ACTIVE: dev
#
#      # DB/Redis 연결 정보 (dev 프로필에서 ${}로 읽음)
#      DB_HOST: db
#      DB_PORT: 3306
#      DB_NAME: growme
#      DB_USERNAME: root
#      DB_PASSWORD: root1234
#
#      REDIS_HOST: redis
#      REDIS_PORT: 6379
#
#      # (선택) OAuth/JWT 값 – 필요 시 주입
#      # KAKAO_CLIENT_ID: xxxxxxxxxxxxxxxxxxxxx
#      # KAKAO_CLIENT_SECRET: yyyyyyyyyyyyyyyyy
#      # JWT_SECRET: change-me-in-dev
#
#      # (선택) JVM 튜닝
#      # JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -Xms256m -Xmx512m"
#
#    ports:
#      - "8080:8080"
#
#    depends_on:
#      db:
#        condition: service_healthy
#      redis:
#        condition: service_started
#
#    # 앱 이미지에 curl 또는 wget 이 설치되어 있어야 합니다.
#    # (예: Eclipse Temurin slim/alpine 기반이면 Dockerfile에서 apk/apt로 설치)
#    healthcheck:
#      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health | grep -q '\"status\":\"UP\"'"]
#      interval: 15s
#      timeout: 5s
#      retries: 10
#      start_period: 30s
#
#    restart: unless-stopped
#
#  db:
#    image: mysql:8.0
#    environment:
#      MYSQL_DATABASE: growme
#      MYSQL_ROOT_PASSWORD: root1234
#      TZ: Asia/Seoul
#      # (선택) 외부접속 허용 필요 시:
#      # MYSQL_ROOT_HOST: "%"
#    command:
#      [
#        "mysqld",
#        "--default-authentication-plugin=mysql_native_password",
#        "--character-set-server=utf8mb4",
#        "--collation-server=utf8mb4_general_ci"
#      ]
#    ports:
#      - "3306:3306"
#    volumes:
#      - db_data:/var/lib/mysql
#    healthcheck:
#      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -proot1234 || exit 1"]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 20s
#    restart: unless-stopped
#
#  redis:
#    image: redis:7
#    ports:
#      - "6379:6379"
#    command: ["redis-server", "--appendonly", "yes"]
#    volumes:
#      - redis_data:/data
#    restart: unless-stopped
#
#volumes:
#  db_data:
#  redis_data: